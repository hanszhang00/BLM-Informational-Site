{"version":3,"sources":["webpack:///./src/components/Org.js","webpack:///./src/pages/orgs.js"],"names":["Project","index","org","title","description","website","facebook","twitter","instagram","email","image","category","className","fluid","childImageSharp","href","map","item","id","stack","query","OrgsPage","orgs","data","allStrapiOrgs","nodes","Layout","Title","idx","Org","key"],"mappings":"8MAuEeA,EA5DC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAGtBC,EASED,EATFC,MACAC,EAQEF,EARFE,YACAC,EAOEH,EAPFG,QACAC,EAMEJ,EANFI,SACAC,EAKEL,EALFK,QACAC,EAIEN,EAJFM,UACAC,EAGEP,EAHFO,MACAC,EAEER,EAFFQ,MACAC,EACET,EADFS,SAGF,OACE,6BAASC,UAAU,WACjB,kBAAC,IAAD,CAAOC,MAAOH,EAAMI,gBAAgBD,MAAOD,UAAU,gBACrD,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,kBAAhB,IAAmCX,EAAQ,EAA3C,KACA,uBAAGc,KAAMV,GACP,4BAAKF,IAEP,yBAAKS,UAAU,iBACb,uBAAGA,UAAU,gBAAgBR,GAC5BO,EAASK,KAAI,SAACC,GACb,OAAO,0BAAMC,GAAID,EAAKC,IAAKD,EAAKE,WAGpC,yBAAKP,UAAU,iBACZN,EACC,uBAAGS,KAAMT,GACP,kBAAC,IAAD,CAAkBM,UAAU,kBAE5B,KACHL,EACC,uBAAGQ,KAAMR,GACP,kBAAC,IAAD,CAAiBK,UAAU,kBAE3B,KACHJ,EACC,uBAAGO,KAAMP,GACP,kBAAC,IAAD,CAAaI,UAAU,kBAEvB,KACHH,EACC,uBAAGM,KAAMN,GACP,kBAAC,IAAD,CAAYG,UAAU,kBAEtB,KACJ,uBAAGG,KAAMV,GACP,kBAAC,IAAD,CAAeO,UAAU,sB,YCpCxBQ,EAAK,aA4BHC,UA/CE,SAAC,GAIX,IAFqBC,EAEtB,EAHJC,KACEC,cAAiBC,MAGnB,OACE,kBAACC,EAAA,EAAD,KACE,6BAASd,UAAU,oBACjB,kBAACe,EAAA,EAAD,CAAOxB,MAAM,QAAb,KACA,yBAAKS,UAAU,kCACZU,EAAKN,KAAI,SAACd,EAAK0B,GACd,OAAO,kBAACC,EAAD,CAAKC,IAAK5B,EAAIgB,GAAIjB,MAAO2B,EAAK1B,IAAKA","file":"component---src-pages-orgs-js-f6877ae75dcd76c4d18d.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"gatsby-image\";\nimport {\n  FaFacebookSquare,\n  FaInstagram,\n  FaTwitterSquare,\n  FaShareSquare,\n  FaMailBulk,\n} from \"react-icons/fa\";\n\nconst Project = ({ index, org }) => {\n  // Extracting relevant data from the query\n  const {\n    title,\n    description,\n    website,\n    facebook,\n    twitter,\n    instagram,\n    email,\n    image,\n    category,\n  } = org;\n\n  return (\n    <article className='project'>\n      <Image fluid={image.childImageSharp.fluid} className='project-img' />\n      <div className='project-info'>\n        <span className='project-number'>0{index + 1}.</span>\n        <a href={website}>\n          <h3>{title}</h3>\n        </a>\n        <div className='project-stack'>\n          <p className='project-desc'>{description}</p>\n          {category.map((item) => {\n            return <span id={item.id}>{item.stack}</span>;\n          })}\n        </div>\n        <div className='project-links'>\n          {facebook ? (\n            <a href={facebook}>\n              <FaFacebookSquare className='project-icon' />\n            </a>\n          ) : null}\n          {twitter ? (\n            <a href={twitter}>\n              <FaTwitterSquare className='project-icon' />\n            </a>\n          ) : null}\n          {instagram ? (\n            <a href={instagram}>\n              <FaInstagram className='project-icon' />\n            </a>\n          ) : null}\n          {email ? (\n            <a href={email}>\n              <FaMailBulk className='project-icon' />\n            </a>\n          ) : null}\n          <a href={website}>\n            <FaShareSquare className='project-icon' />\n          </a>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nProject.propTypes = {};\n\nexport default Project;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { graphql } from \"gatsby\";\nimport Org from \"../components/Org\";\nimport Title from \"../components/Title\";\n\nconst OrgsPage = ({\n  data: {\n    allStrapiOrgs: { nodes: orgs },\n  },\n}) => {\n  return (\n    <Layout>\n      <section className='section projects'>\n        <Title title='orgs'> </Title>\n        <div className='section-center projects-center'>\n          {orgs.map((org, idx) => {\n            return <Org key={org.id} index={idx} org={org} />;\n          })}\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  {\n    allStrapiOrgs {\n      nodes {\n        id\n        title\n        description\n        website\n        facebook\n        twitter\n        instagram\n        email\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        category {\n          id\n          stack\n        }\n      }\n    }\n  }\n`;\n\nexport default OrgsPage;\n"],"sourceRoot":""}